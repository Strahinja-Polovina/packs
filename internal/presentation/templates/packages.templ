package templates

import (
	"github.com/Strahinja-Polovina/packs/internal/domain/entity"
	"strconv"
)

templ PackageList(packs []entity.Pack) {
	<div class="bg-white rounded-lg shadow-md p-6 mb-8">
		<div class="flex justify-between items-center mb-4">
			<h2 class="text-2xl font-semibold text-gray-800">Package Sizes</h2>
			<button 
				class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-md transition-colors"
				hx-get="/web/packages/new"
				hx-target="#package-form-modal"
				hx-swap="innerHTML"
			>
				Add New Package
			</button>
		</div>

		<div id="package-form-modal"></div>

		<div class="overflow-x-auto">
			<table class="min-w-full table-auto">
				<thead class="bg-gray-50">
					<tr>
						<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
						<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Size</th>
						<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Created At</th>
						<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Updated At</th>
						<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
					</tr>
				</thead>
				<tbody class="bg-white divide-y divide-gray-200" id="packages-table-body">
					for _, pack := range packs {
						@PackageRow(pack)
					}
				</tbody>
			</table>
		</div>
	</div>
}

templ PackageRow(pack entity.Pack) {
	<tr id={ "package-row-" + pack.ID().String() }>
		<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">{ pack.ID().String()[:8] }...</td>
		<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">{ strconv.Itoa(pack.Size()) }</td>
		<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{ pack.CreatedAt().Format("2006-01-02 15:04") }</td>
		<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{ pack.UpdatedAt().Format("2006-01-02 15:04") }</td>
		<td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
			<button 
				class="text-blue-600 hover:text-blue-900 mr-3"
				hx-get={ "/web/packages/" + pack.ID().String() + "/edit" }
				hx-target="#package-form-modal"
				hx-swap="innerHTML"
			>
				Edit
			</button>
			<button 
				class="text-red-600 hover:text-red-900"
				hx-delete={ "/web/packages/" + pack.ID().String() }
				hx-target="#packages-table-body"
				hx-swap="innerHTML"
				hx-confirm="Are you sure you want to delete this package?"
			>
				Delete
			</button>
		</td>
	</tr>
}

templ PackageForm(pack *entity.Pack, isEdit bool) {
	<div class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50" id="package-modal">
		<div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
			<div class="mt-3">
				<div class="flex justify-between items-center mb-4">
					<h3 class="text-lg font-medium text-gray-900">
						if isEdit {
							Edit Package
						} else {
							Add New Package
						}
					</h3>
					<button 
						class="text-gray-400 hover:text-gray-600"
						onclick="document.getElementById('package-modal').remove()"
					>
						<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
						</svg>
					</button>
				</div>

				<!-- Hidden button to close modal after successful submission -->
				<button 
					id="close-modal-btn"
					style="display: none;"
					onclick="document.getElementById('package-modal').remove()"
				></button>

				<!-- Hidden trigger button for auto-close -->
				<button 
					style="display: none;"
					hx-trigger="htmx:afterRequest from:form"
					hx-get="#"
					hx-swap="none"
					onclick="document.getElementById('close-modal-btn').click()"
				></button>

				<form 
					if isEdit && pack != nil {
						hx-put={ "/web/packages/" + pack.ID().String() }
					} else {
						hx-post="/web/packages"
					}
					hx-target="#packages-table-body"
					hx-swap="innerHTML"
				>
					<div class="mb-4">
						<label for="size" class="block text-sm font-medium text-gray-700 mb-2">Package Size</label>
						<input 
							type="number" 
							id="size" 
							name="size" 
							class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
							if isEdit && pack != nil {
								value={ strconv.Itoa(pack.Size()) }
							}
							required
							min="1"
						/>
					</div>

					<div class="flex justify-end space-x-3">
						<button 
							type="button"
							class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300"
							onclick="document.getElementById('package-modal').remove()"
						>
							Cancel
						</button>
						<button 
							type="submit"
							class="px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700"
						>
							if isEdit {
								Update
							} else {
								Create
							}
						</button>
					</div>
				</form>
			</div>
		</div>
	</div>
}
