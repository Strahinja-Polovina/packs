services:
  postgres:
    image: postgres:17-alpine
    container_name: packs_postgres
    environment:
      POSTGRES_DB: packs_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d packs_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  migrate:
    image: golang:1.24-alpine
    container_name: packs_migrate
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations:ro
    working_dir: /migrations
    command: >
      sh -c "
        apk add --no-cache git &&
        go install github.com/pressly/goose/v3/cmd/goose@latest &&
        goose postgres 'postgres://postgres:postgres@postgres:5432/packs_db?sslmode=disable' up
      "
    restart: "no"

  pack-calculator:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: packs_api
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=release
      - SERVER_PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=packs_db
      - DB_SSL_MODE=disable
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

volumes:
  postgres_data:
